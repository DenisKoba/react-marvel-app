{"version":3,"sources":["Components/CharactersComponent/CharactersComponent.js","Components/ShowMore/ShowMore.js","Components/Preloader/Preloader.js","api/api.js","api/characters-api.js","Components/CharactersList/CharactersList.js","store/actions.js","Components/ComicsComponent/ComicsComponent.js","Components/CharacterDetails/CharacterDetails.js","Components/Header/BackButton/BackButton.js","Components/Header/Header.js","api/google-api.js","api/auth-api.js","Components/Auth/Auth.js","Components/MarvelComponent/MarvelComponent.js","App.js","store/reducer.js","serviceWorker.js","index.js"],"names":["CharacterComponent","props","react_default","a","createElement","Link","className","to","concat","data","id","key","src","thumbnail","path","name","ShowMore","loading","Preloader","defaultHandler","resp","api","url","apikey","axios","get","params","then","characters_api","arguments","length","undefined","requestProps","limit","CharactersList","state","comicsData","isButtonLoading","JSCookie","this","char","requestCharacters","history","push","_this2","map","character","CharactersComponent","onClick","setState","Components_ShowMore_ShowMore","Components_Preloader_Preloader","Component","connect","characters","dispatch","charApi","type","results","ComicsComponent","isActiveLimit","toggleDescr","comicsLongDescr","description","comicsShirtDescr","substring","CharacterDetails","characterData","charComics","isLoading","match","finally","charactersDetails","Object","toConsumableArray","find","el","parseInt","findCharDetails","_this3","Components_ComicsComponent_ComicsComponent","renderCharComics","Header","xmlns","width","height","viewBox","fill","d","remove","localStorage","removeItem","Route","component","BackButton","google_api","post","auth_api","googleApi","email","password","Auth","signState","errorText","isSigningIn","validateForm","test","resolveSignUp","signUp","idToken","resolveSignIn","signIn","removeError","changeSignState","document","querySelectorAll","forEach","value","signInMode","signUpMode","placeholder","onInput","e","target","currentTarget","authApi","returnSecureToken","catch","error","MarvelComponent","exact","App","BrowserRouter","Components_MarvelComponent_MarvelComponent","initialState","specificCharacter","token","refreshToken","emial","reducer","action","objectSpread","set","Boolean","window","location","hostname","store","createStore","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d1805907.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst CharacterComponent = (props) => {\n  return <Link className=\"char-component\" to={`/character/${props.data.id}`} key={props.data.id}>\n    <div className=\"hero-img-container\">\n      <div className=\"hero-img-container__wrap\">\n        <img className=\"hero-img-container__img\" src={`${props.data.thumbnail.path}.jpg`} />\n        <div className=\"hero-img-container__title-wrap\">\n          <div className=\"hero-img-container__hover\"></div>\n          <p className=\"hero-img-container__title\">{props.data.name}</p>\n        </div>\n      </div>\n    </div>\n  </Link>\n}\n\nexport default CharacterComponent\n","import React from 'react'\n\nconst ShowMore = (props) => {\n  const button = () => {\n    return <div className=\"show-more-button-container__button\"><span>Show More</span></div>\n  }\n  const buttonLoading = () => {\n    return <div className=\"show-more-button-container__button\"><span className=\"show-more-button-container__loading\">Loading...</span></div>\n  }\n  const renderButton = () => {\n    if (props.loading) {\n      return buttonLoading()\n    } else {\n      return button()\n    }\n  }\n  return <div className=\"show-more-button-container\">{ renderButton() }</div>\n}\n\nexport default ShowMore\n","import React from 'react'\n\nconst Preloader = (props) => {\n  return <div className=\"preloader-wrapper\">\n    <div className=\"outline\">\n      <div className=\"loader\">\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  </div>\n}\n\nexport default Preloader","import axios from 'axios/index'\n\nconst KEY = 'ee36a79dfdfc1141f1ea1a48d75f9d39'\nconst BASE_URL = 'https://gateway.marvel.com/v1/public/'\n\n\nfunction defaultHandler(resp) {\n  let data\n  if (resp.data) {\n    ({ data } = resp)\n  }\n  return data\n}\n\nexport default {\n  get(url, props) {\n    props.apikey = KEY\n    return axios.get(BASE_URL + url, { params: props }).then(defaultHandler)\n  },\n}","import api from './api'\n\nexport default {\n  getCharacters(props = {}) {\n    return api.get('characters', props)\n  },\n  getCharDetails(id, props = {}) {\n    return api.get(`characters/${id}`, props)\n  },\n  getCharComics(id, props = {}) {\n    return api.get(`characters/${id}/comics`, props)\n  },\n  getComics(id, props = {}) {\n    return api.get(`comics/${id}`, props)\n  },\n}\n","import React, { Component } from 'react'\nimport CharacterComponent from '../CharactersComponent/CharactersComponent'\nimport ShowMore from '../ShowMore/ShowMore'\nimport Preloader from '../Preloader/Preloader'\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../../store/actions';\nimport charApi from '../../api/characters-api'\nimport JSCookie from 'js-cookie'\n\nconst requestProps = {\n  limit: 50\n}\n\nconst mapStateToProps = state => {\n  return {\n    char: state.characters,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    requestCharacters: () => {\n      return charApi.getCharacters(requestProps).then((data) => {\n        dispatch({type: actionTypes.GET_CHARACTERS, data: data.data.results})\n      })\n    },\n  }\n}\n\nclass CharactersList extends Component {\n  state = {\n    comicsData: [],\n    isButtonLoading: false,\n  }\n\n  componentDidMount() {\n    if (JSCookie.get('success')) {\n      return this.props.char.length\n        ? null\n        : this.props.requestCharacters()\n    }\n    return this.props.history.push('/login')\n  }\n\n  render() {\n    const incrementLimit = () => {\n      this.setState(() => { return { isButtonLoading: true }})\n      requestProps.limit = requestProps.limit + 20\n      this.props.requestCharacters().then(() => { this.setState(() => { return { isButtonLoading: false }}) })\n    }\n\n    const characters = () => {\n      return this.props.char.map(character => {\n        return <CharacterComponent key={character.id} data={character}/>\n      })\n    }\n\n    return (\n      this.props.char.length\n        ? <div>\n            <div className=\"characters-container\">{ characters() }</div>\n            <div onClick={ incrementLimit }>\n              <ShowMore loading={this.state.isButtonLoading}/>\n            </div>\n         </div>\n        : <Preloader/>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CharactersList);\n","export const GET_CHARACTERS = 'GET_CHARACTERS'\nexport const GET_CHOSEN_CHARACTER = 'GET_CHOSEN_CHARACTER'\nexport const SIGN_UP = 'SIGN_UP'\nexport const SIGN_IN = 'SIGN_IN'\nexport const SET_USER_AUTH_DETAILS = 'SET_USER_AUTH_DETAILS'\n","import React, { Component } from 'react'\n\nclass ComicsComponent extends Component {\n  state = {\n    isActiveLimit: true,\n  }\n\n  render() {\n    const toggleDescr = () => {\n      this.setState(() => { return { isActiveLimit: !this.state.isActiveLimit }})\n    }\n\n    const renderComicsData = () => {\n      if(this.props.data.description) {\n        return this.state.isActiveLimit ? comicsShirtDescr() : comicsLongDescr()\n      }\n      return <p className=\"comics-wrapper__descr\">No description found :-(</p>\n  }\n\n    const comicsLongDescr = () => {\n      return <div>\n        <p className=\"comics-wrapper__descr\">{ this.props.data.description }</p>\n        <p onClick={ toggleDescr } className=\"comics-wrapper__show-more\">Show less</p>\n      </div>\n    }\n\n    const comicsShirtDescr = () => {\n      if (this.props.data.description.length > 100) {\n        return <div>\n          <p className=\"comics-wrapper__descr\">{`${this.props.data.description.substring(0, 100)}...`}</p>\n          <p onClick={ toggleDescr } className=\"comics-wrapper__show-more\">Show more</p>\n        </div>\n      }\n      return this.props.data.description\n    }\n    \n    return <div className=\"comics-wrapper__container\">\n      <img className=\"comics-wrapper__img\" src={`${this.props.data.thumbnail.path}.jpg`} />\n      <div className=\"comics-wrapper__descr\">{ renderComicsData() }</div>\n    </div>\n  }\n}\n\nexport default ComicsComponent","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport ComicsComponent from '../ComicsComponent/ComicsComponent'\nimport charApi from '../../api/characters-api'\nimport Preloader from '../Preloader/Preloader'\n\nconst mapStateToProps = state => {\n  return {\n    char: state.characters\n  };\n};\n\nclass CharacterDetails extends Component {\n  state = {\n    characterData: {},\n    charComics: [],\n    requestProps : {\n      limit: 10\n    },\n    isLoading: false,\n  }\n\n  componentDidMount() {\n    const findCharDetails = () => {\n      const charArr = [...this.props.char]\n      const charactersDetails = charArr.find((el) => { return el.id === parseInt(this.props.match.params.id) })\n      return this.setState(() => { return { characterData: charactersDetails }})\n    }\n\n    const requestCharDetails = () => {\n      charApi.getCharDetails(this.props.match.params.id, this.state.requestProps).then((data) => {\n        this.setState(() => { return { characterData: data.data.results[0] }})\n      })\n    }\n\n    const getComics = () => {\n      this.setState(() => { return { isLoading: true }})\n      return charApi.getCharComics(this.props.match.params.id, this.state.requestProps)\n        .then((data) => {\n        return this.setState(() => { return { charComics: data.data.results, isLoading: false }})\n      })\n        .finally(() => {\n          this.setState(() => { return { isLoading: false }})\n        })\n    }\n\n    getComics()\n    return this.props.char.length ? findCharDetails() : requestCharDetails()\n  }\n\n  render() {\n    const resolvePreloader = () => {\n      return this.state.isLoading ? <Preloader /> : false\n    }\n\n    const renderCharComics = () => {\n      if (this.state.charComics) {\n        return this.state.charComics.map((el) => {\n          return <ComicsComponent key={el.id} data={el}/>\n        })\n      }\n    }\n\n    const characterDetails = () => {\n      return <div className=\"char-details-container\">\n        <div className=\"char-details-container__wrapper\">\n          <div className=\"char-details-container__img-wrapper\">\n            <img className=\"char-details-container__img\" src={ `${this.state.characterData.thumbnail.path}.jpg` }/>\n          </div>\n          <div className=\"char-details-container__descr-wrapper\">\n            <div className='char-details-container__name'>{ this.state.characterData.name }</div>\n            <p className='char-details-container__descr'>{ this.state.characterData.description }</p>\n          </div>\n        </div>\n        <div className='comics-component'>{ renderCharComics() }</div>\n        { resolvePreloader() }\n      </div>\n    }\n    return this.state.characterData.name ? characterDetails() : <div className='loading'>loading...</div>\n  }\n}\n\n\nexport default connect (mapStateToProps)(CharacterDetails)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Header = () => {\n  return <Link className=\"marvel-navbar-link go-back\" to={ \"/\" }>\n    <div>Go Back</div>\n  </Link>\n}\n\nexport default Header","import React from 'react'\nimport JSCookie from 'js-cookie'\nimport { Route } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport BackButton from './BackButton/BackButton'\n\nconst Header = (props) => {\n  const logOut = () => {\n    JSCookie.remove('success')\n    JSCookie.remove('tokenRefresh')\n    localStorage.removeItem('userEmail')\n    return props.history.push('/login')\n  }\n  return <div className=\"header\">\n    <div className=\"marvel-logo-container\">\n      <svg className=\"marvel-logo\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2500\" height=\"1000\" viewBox=\"0 0 500 200\"><path fill=\"#f0141e\" d=\"M0 0h500v200H0z\"/><path d=\"M423.12 46.619V15.991h-85.706l-14.11 102.282-13.94-102.282h-30.908l3.454 27.312c-3.563-7-16.211-27.312-44.061-27.312-.185-.012-30.945 0-30.945 0l-.128 149.084-22.523-149.084-40.484-.012-23.304 154.467.013-154.455H81.726l-13.965 86.768-13.604-86.768H15.399v167.932h30.523v-80.944l13.886 80.944h16.224l13.69-80.944v80.944h58.838l3.558-25.83h23.688l3.558 25.83 57.771.037h.042v-.037H237.249v-54.504l7.074-1.024 14.661 55.565h29.883l-.012-.037H288.94l-19.238-65.11c9.741-7.179 20.752-25.379 17.822-42.798v-.006c.036.226 18.164 108.026 18.164 108.026l35.534-.11 24.279-152.203v152.203h57.617v-30.199h-27.344v-38.507h27.344v-30.66h-27.344v-37.94h27.346zM155.713 131.47l8.387-71.802 8.69 71.802h-17.077zm88.708-33.155c-2.344 1.123-4.784 1.685-7.172 1.691v-54.01c.037 0 .093-.006.153-.006 2.38-.018 20.203.714 20.203 26.709 0 13.598-6.06 22.174-13.184 25.616zm240.186 55.383v30.188h-56.214V15.967h30.272v137.731h25.942z\" fill=\"#fff\"/></svg>\n      <div onClick={ logOut } className=\"logout\">Log out</div>\n    </div>\n    <div className=\"marvel-navbar-container\">\n      <Route className=\"marvel-navbar-link\" path='/character/:id' component={ BackButton }/>\n      <Link className=\"marvel-navbar-link\" to={ \"/\" }>\n        <div>Characters</div>\n      </Link>\n      <Link className=\"marvel-navbar-link\" to={ \"/comics\" }>\n        <div>Comics</div>\n      </Link>\n    </div>\n  </div>\n}\n\nexport default Header\n","import axios from 'axios/index'\n\nconst KEY = '?key=AIzaSyC3b4Rf_YWIhnbhtiDkxTsUJfhuOgj3oDw'\nconst BASE_URL = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/'\n\n\nfunction defaultHandler(resp) {\n  let data\n  if (resp.data) {\n    ({ data } = resp)\n  }\n  return data\n}\n\nexport default {\n  post(url, props) {\n    return axios.post(`${BASE_URL}${url}${KEY}`, props).then(defaultHandler)\n  },\n}","import googleApi from './google-api'\n\nexport default {\n  signUp(props) {\n\n    return googleApi.post('signupNewUser/', props)\n  },\n  signIn(props) {\n    return googleApi.post('verifyPassword/', props)\n  },\n}\n","import React, { Component } from 'react'\nimport { browserHistory } from 'react-router';\nimport { connect } from 'react-redux';\nimport authApi from \"../../api/auth-api\";\nimport * as actionTypes from \"../../store/actions\";\n\nlet email = null\nlet password = null\n\nconst mapStateToProps = state => {\n  return {\n    email: state.email,\n    password: state.password,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: () => {\n      const data = {\n        email: email,\n        password: password,\n        returnSecureToken: true,\n      }\n\n      return authApi.signUp(data).then((data) => {\n        dispatch({type: actionTypes.SIGN_UP, data })\n        return data\n      }).catch((error) => {\n        return error\n      })\n    },\n    signIn: () => {\n      const data = {\n        email: email,\n        password: password,\n        returnSecureToken: true,\n      }\n\n      return authApi.signIn(data).then((data) => {\n        dispatch({type: actionTypes.SIGN_UP, data })\n        return data\n      }).catch((error) => {\n        return error\n      })\n    },\n  }\n}\n\nclass Auth extends Component {\n  state = {\n    email: '',\n    password: '',\n    signState: true,\n    errorText: null,\n    isSigningIn: false,\n  }\n\n  render() {\n    const validateEmail = (email) => {\n      return /^(([^а-яА-Яыъ<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^а-яА-Яыъ<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\"[a-zA-Z\\-0-9]+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)\n    }\n\n    const validateForm = () => {\n      if (!validateEmail(this.state.email)) {\n        return this.setState(() => { return { errorText: 'Invalid email. Try another email.' }})\n      } else if (this.state.password.length <= 7) {\n        return this.setState(() => { return { errorText: 'Password should be at least 7 characters length' }})\n      }\n\n      return true\n    }\n\n    const resolveSignUp = () => {\n      if (validateForm()) {\n        this.setState(() => { return { isSigningIn: true }})\n        this.props.signUp().then((data) => {\n          this.setState(() => { return { isSigningIn: false }})\n          if (data.idToken) {\n            return this.props.history.push('/')\n          }\n          return this.setState(() => { return { errorText: 'Such email is already exists.' }})\n        })\n      }\n    }\n\n    const resolveSignIn = () => {\n      if (validateForm()) {\n        this.setState(() => { return { isSigningIn: true }})\n        this.props.signIn().then((data) => {\n          this.setState(() => { return { isSigningIn: false }})\n          if (data.idToken) {\n            return this.props.history.push('/')\n          }\n\n          return this.setState(() => { return { errorText: 'Invalid email. Try another email.' }})\n        })\n      }\n    }\n\n    const resolveEmail = (e) => {\n      const target = e.currentTarget\n      this.setState(() => { return { email: target.value }})\n      return email = target.value\n    }\n\n    const resolvePassword = (e) => {\n      const target = e.currentTarget\n      this.setState(() => { return { password: target.value }})\n      return password = target.value\n    }\n\n    const removeError = () => {\n      return this.setState(() => { return { errorText: null }})\n    }\n\n    const changeSignState = () => {\n      const loginInput = document.querySelectorAll('.js-input')\n      loginInput.forEach((el) => {\n        el.value = ''\n      })\n      this.setState(() => { return { errorText: '' }})\n      return this.setState(() => { return { signState: !this.state.signState, password: null, email: null }})\n    }\n\n    const isSigningIn = () => {\n      return this.state.isSigningIn ? <span>...Processing</span> : <span>Sign In</span>\n    }\n\n    const isSigningUp = () => {\n      return this.state.isSigningIn ? <span>...Processing</span> : <span>Sign Up</span>\n    }\n\n    const signInMode = () => {\n      return  <div className=\"login-button-wrapper\">\n                <button className=\"login-button-wrapper__button\" onClick={ resolveSignIn }>{ isSigningIn() }</button>\n                <div className=\"login-button-wrapper__text\">Don't have an account?\n                  <span onClick={ changeSignState }\n                        className=\"login-button-wrapper__link\"> Sign Up</span>\n                </div>\n              </div>\n    }\n\n    const signUpMode = () => {\n      return  <div className=\"login-button-wrapper\">\n        <button className=\"login-button-wrapper__button\" onClick={ resolveSignUp }>{ isSigningUp() }</button>\n        <div onClick={ changeSignState } className=\"login-button-wrapper__text login-button-wrapper__link\">Sign In</div>\n      </div>\n    }\n\n    const resolveState = () => {\n      return this.state.signState ? signInMode() : signUpMode()\n    }\n\n    return <div>\n      <div className=\"login-form-wrapper\">\n        <div className=\"image-container\"></div>\n        <div className=\"login-container\">\n          <div className=\"login-container__form\">\n            <input className=\"login-container__input js-input\" placeholder='email' onInput={ resolveEmail } onClick={removeError}/>\n            <input className=\"login-container__input js-input\" placeholder='password' onInput={ resolvePassword } onClick={removeError} type=\"password\"/>\n            { resolveState() }\n            <div className=\"error-container\">{ this.state.errorText } </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  }\n}\n\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(Auth)\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport CharactersList from '../CharactersList/CharactersList'\nimport CharacterDetails from '../CharacterDetails/CharacterDetails'\nimport Header from '../Header/Header'\nimport Auth from '../Auth/Auth'\n\nconst MarvelComponent = (props) => {\n  return <div>\n    <Route path='/login' component={ Auth }/>\n    <Route path='/' component={ Header }/>\n    <Route path='/' exact  component={ CharactersList }/>\n    <Route path='/character/:id' component={ CharacterDetails }/>\n  </div>\n}\n\nexport default MarvelComponent\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport MarvelComponent from './Components/MarvelComponent/MarvelComponent'\n\nclass App extends Component {\n\n  render() {\n      return (\n        <BrowserRouter>\n          <MarvelComponent />\n        </BrowserRouter>\n      )\n  }\n}\n\nexport default App;\n","import * as actionTypes from './actions';\nimport JSCookie from 'js-cookie'\n\nconst initialState = {\n  characters: [],\n  specificCharacter: [],\n  token: null,\n  refreshToken: null,\n  emial: null,\n  password: null,\n};\n\nconst reducer = ( state = initialState, action ) => {\n  switch ( action.type ) {\n    case actionTypes.GET_CHARACTERS:\n      return {\n        ...state,\n        characters: action.data\n      }\n    case actionTypes.GET_CHOSEN_CHARACTER:\n      return state\n    case actionTypes.SIGN_UP:\n      JSCookie.set('success', action.data.idToken)\n      JSCookie.set('refreshToken', action.data.refreshToken)\n      return {\n        ...state,\n        token: action.data.idToken,\n        refreshToken: action.data.refreshToken,\n      }\n    case actionTypes.SIGN_IN:\n      JSCookie.set('success', action.data.idToken)\n      JSCookie.set('refreshToken', action.data.refreshToken)\n      return {\n        ...state,\n        token: action.data.idToken,\n        refreshToken: action.data.refreshToken,\n      }\n    default:\n      return state;\n  }\n\n};\n\nexport default reducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport reducer from './store/reducer'\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer)\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}